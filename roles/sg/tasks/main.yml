---
- name: Get VPC information by tags
  amazon.aws.ec2_vpc_net_info:
    region: "{{ aws_region }}"
    filters:
      "tag:Environment": "{{ env_name }}"
      "tag:ManagedBy": "ansible"
  register: vpc_info

- name: Fail if VPC not found
  fail:
    msg: "VPC with Environment tag '{{ env_name }}' not found. Run VPC role first."
  when: vpc_info.vpcs | length == 0

- name: Set VPC ID
  set_fact:
    vpc_id: "{{ vpc_info.vpcs[0].id }}"

- name: Create EKS Control Plane Security Group
  amazon.aws.ec2_security_group:
    name: "{{ eks_controlplane_sg_name }}"
    description: "EKS Control Plane Security Group"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    rules: "{{ control_plane_rules }}"
    tags:
      Name: "{{ eks_controlplane_sg_name }}"
      Environment: "{{ env_name }}"
      ManagedBy: "ansible"
  register: eks_controlplane_sg

- name: Update workernodes rules with control plane SG ID
  set_fact:
    workernodes_rules_with_sg: |
      {% set rules = workernodes_rules %}
      {% set _ = rules[0].update({'group_id': eks_controlplane_sg.group_id}) %}
      {{ rules }}

- name: Create EKS Worker Node Security Group
  amazon.aws.ec2_security_group:
    name: "{{ eks_workernodes_sg_name }}"
    description: "EKS Worker Nodes Security Group"
    vpc_id: "{{ vpc_id }}"
    region: "{{ aws_region }}"
    rules: "{{ workernodes_rules_with_sg }}"
    tags:
      Name: "{{ eks_workernodes_sg_name }}"
      Environment: "{{ env_name }}"
      ManagedBy: "ansible"
  register: eks_workernodes_sg

- name: Debug created security groups
  debug:
    msg:
      - "Control Plane SG: {{ eks_controlplane_sg.group_id }}"
      - "Worker Nodes SG: {{ eks_workernodes_sg.group_id }}"
