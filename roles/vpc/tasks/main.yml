---
- name: Create VPC
  amazon.aws.ec2_vpc_net:
    name: "vpc-{{ env_name }}"
    cidr_block: "{{ vpc_cidr }}"
    region: "{{ aws_region }}"
    tags:
      Environment: "{{ env_name }}"
      Project: "ansible-cicd"
      ManagedBy: "ansible"
  register: vpc_result

- name: Create Internet Gateway
  amazon.aws.ec2_vpc_igw:
    vpc_id: "{{ vpc_result.vpc.id }}"
    state: present
    tags:
      Name: "igw-{{ env_name }}"
      Environment: "{{ env_name }}"
  register: igw_result

- name: Create Public Subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc_result.vpc.id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    region: "{{ aws_region }}"
    map_public: true
    tags:
      Name: "subnet-{{ env_name }}-public-{{ item.az }}"
      kubernetes.io/cluster/{{ eks_cluster_name }}: "shared"
      kubernetes.io/role/internal-elb: "1"
      Environment: "{{ env_name }}"
      Type: "public"
  loop: "{{ vpc_public_subnets }}"
  register: public_subnets_result

- name: Create Private Subnets
  amazon.aws.ec2_vpc_subnet:
    vpc_id: "{{ vpc_result.vpc.id }}"
    cidr: "{{ item.cidr }}"
    az: "{{ item.az }}"
    region: "{{ aws_region }}"
    map_public: false
    tags:
      Name: "subnet-{{ env_name }}-private-{{ item.az }}"
      kubernetes.io/cluster/{{ eks_cluster_name }}: "owned"
      kubernetes.io/role/internal-elb: "1"
      Environment: "{{ env_name }}"
      Type: "private"
      Tier: "private"
  loop: "{{ vpc_private_subnets }}"
  register: private_subnets_result

- name: Check for existing NAT Gateway
  amazon.aws.ec2_vpc_nat_gateway_info:
    region: "{{ aws_region }}"
    filters:
      vpc-id: "{{ vpc_result.vpc.id }}"
      state: "available"
  register: existing_nat_gateways
  when: create_nat_gateway | default(true) | bool

- name: Create Single NAT Gateway
  amazon.aws.ec2_vpc_nat_gateway:
    state: present
    subnet_id: "{{ public_subnets_result.results[0].subnet.id }}"
    wait: true
    wait_timeout: 600
    region: "{{ aws_region }}"
    tags:
      Name: "nat-{{ env_name }}"
      Environment: "{{ env_name }}"
      ManagedBy: "ansible"
  register: nat_gateway_created
  when: 
    - create_nat_gateway | default(true) | bool
    - existing_nat_gateways.nat_gateways | length == 0

- name: Use existing NAT Gateway
  set_fact:
    nat_gateway:
      nat_gateway_id: "{{ existing_nat_gateways.nat_gateways[0].nat_gateway_id }}"
  when:
    - create_nat_gateway | default(true) | bool
    - existing_nat_gateways.nat_gateways | length > 0

- name: Set NAT Gateway from created
  set_fact:
    nat_gateway: "{{ nat_gateway_created }}"
  when:
    - create_nat_gateway | default(true) | bool
    - existing_nat_gateways.nat_gateways | length == 0
    - nat_gateway_created is defined

- name: Create Route Table for Private Subnets WITH NAT Route
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc_result.vpc.id }}"
    region: "{{ aws_region }}"
    routes:
      - dest: "0.0.0.0/0"
        gateway_id: "{{ nat_gateway.nat_gateway_id }}"
    tags:
      Name: "rt-{{ env_name }}-private"
      Environment: "{{ env_name }}"
      Type: "private"
  register: private_route_table
  when: create_nat_gateway | default(true) | bool and nat_gateway is defined

- name: Associate Private Subnets with Private Route Table
  amazon.aws.ec2_vpc_route_table:
    vpc_id: "{{ vpc_result.vpc.id }}"
    route_table_id: "{{ private_route_table.route_table.id }}"
    subnets: "{{ private_subnets_result.results | map(attribute='subnet.id') | list }}"
    state: present
    region: "{{ aws_region }}"
  when: create_nat_gateway | default(true) | bool and private_route_table is defined

- name: Set VPC ID as fact
  set_fact:
    vpc_id: "{{ vpc_result.vpc.id }}"

- name: Set private subnet IDs as fact
  set_fact:
    private_subnet_ids: "{{ private_subnets_result.results | map(attribute='subnet.id') | list }}"
